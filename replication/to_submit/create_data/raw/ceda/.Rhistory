# clear workspace
rm(list = ls())
# install libraries
#install.packages("gdata")
#install.packages("readxlsb")
# load libraries
library(gdata)
library(readxlsb)
# set working directory
setwd("~/Dropbox/cvra/paper1_housing/replication/to_submit/create_data/raw/aggregatePermits/")
df <- read.xls("affordability_mh.xlsx", sheet = "5th Cycle APR Raw Data-Final", header = TRUE)
df <- df[, c(1, 2, 4, 5, 7, 11, 15, 17, 19)]
names(df) <- c("location", "county", "year", "status", "permits_vli", "permits_li", "permits_mod", "permits_abovemod", "permits")
df <- df[c(2:nrow(df)),]
df <- df[df$location!="",]
# append 2019 data
df19 <- read_xlsb("affordability_2020.xlsb", sheet = "5th Cycle APR Raw Data", header = TRUE)
df19 <- df19[, c(2, 1, 4, 5, 7, 11, 15, 17, 19)]
names(df19) <- c("location", "county", "year", "status", "permits_vli", "permits_li", "permits_mod", "permits_abovemod", "permits")
df19 <- df19[c(2:nrow(df19)),]
df19 <- df19[df19$location!="" & df19$year=="2019",]
df <- rbind(df, df19)
df <- df[order(df$location, df$year),]
# one manual correction (probably typo)
df$permits[df$permits=="200%"] <- "2"
# change factors to character/numeric
df$location <- as.character(df$location)
df$county <- as.character(df$county)
df$year <- as.character(df$year)
df$status <- as.character(df$status)
df$permits_vli <- as.numeric(as.character(df$permits_vli))
df$permits_li <- as.numeric(as.character(df$permits_li))
df$permits_mod <- as.numeric(as.character(df$permits_mod))
df$permits_abovemod <- as.numeric(gsub(",","",df$permits_abovemod)) # comma in xlsx file
df$permits <- as.numeric(as.character(df$permits))
# change NAs to 0
df$permits_vli[is.na(df$permits_vli)] <- 0
df$permits_li[is.na(df$permits_li)] <- 0
df$permits_mod[is.na(df$permits_mod)] <- 0
df$permits_abovemod[is.na(df$permits_abovemod)] <- 0
df$permits[is.na(df$permits)] <- 0
# check that columns sum to total
df$permits_check <- df$permits_vli + df$permits_li + df$permits_mod + df$permits_abovemod
df[df$permits_check!=df$permits,]
# overwrite permits in this case
#df$permits[df$location=="STANTON" & df$year==2017] <- df$permits_check[df$location=="STANTON" & df$year==2017]
# merge reports onto permit data
housing <- read.csv("statewide_190715.csv")
housing19 <- read.csv("statewide_2019.csv")
housing19 <- housing19[housing19$Location!="Location",]
# combine datasets
housing19$Permits <- as.numeric(housing19$Permits)
total19 <- housing19[housing19$Series=="Total Units", c("Location", "Year", "Permits")]
single19 <- housing19[housing19$Series=="Units in Single-Family Structures", c("Location", "Year", "Permits")]
multi19 <- housing19[housing19$Series=="Units in All Multi-Family Structures", c("Location", "Year", "Permits")]
names(total19) <- c("location", "year", "total")
names(single19) <- c("location", "year", "single")
names(multi19) <- c("location", "year", "multi")
temp1 <- merge(total19, single19, by = c("location", "year"), all.x = TRUE)
out19 <- merge(temp1, multi19, by = c("location", "year"), all.x = TRUE)
out19$multiTwo <- out19$multiThreeFour <- out19$multiFivePlus <- NA
housing <- rbind(housing, out19)
# merge a few manually
in_housing <- unique(housing$location)
in_df <- unique(df$location)
notmerged <- in_housing[!in_housing %in% in_df]
notmerged <- notmerged[-grep("UNINCORPORATED AREA", notmerged)]
df$location_df <- df$location
df$location[df$location_df=="APPLE VALLEY"] <- "APPLE VALLEY TOWN"
df$location[df$location_df=="ATHERTON"] <- "ATHERTON TOWN"
df$location[df$location_df=="CATHEDRAL"] <- "CATHEDRAL CITY"
df$location[df$location_df=="COLMA"] <- "COLMA TOWN"
df$location[df$location_df=="CORTE MADERA"] <- "CORTE MADERA TOWN"
df$location[df$location_df=="FAIRFAX"] <- "FAIRFAX TOWN"
df$location[df$location_df=="HILLSBOROUGH"] <- "HILLSBOROUGH TOWN"
df$location[df$location_df=="LOOMIS"] <- "LOOMIS TOWN"
df$location[df$location_df=="LOS GATOS"] <- "LOS GATOS TOWN"
df$location[df$location_df=="MAMMOTH LAKES"] <- "MAMMOTH LAKES TOWN"
df$location[df$location_df=="PARADISE"] <- "PARADISE TOWN"
df$location[df$location_df=="PORTOLA VALLEY"] <- "PORTOLA VALLEY TOWN"
df$location[df$location_df=="ST. HELENA"] <- "SAINT HELENA"
df$location[df$location_df=="TIBURON"] <- "TIBURON TOWN"
df$location[df$location_df=="WINDSOR"] <- "WINDSOR TOWN"
df$location[df$location_df=="WOODSIDE"] <- "WOODSIDE TOWN"
df$location[df$location_df=="YOUNTVILLE"] <- "YOUNTVILLE TOWN"
df$location[df$location_df=="YUCCA VALLEY"] <- "YUCCA VALLEY TOWN"
# merge
final <- merge(housing, df, by = c("location", "year"), all.x = TRUE)
# see how much missing data remains
prop.table(table(is.na(final$permits[final$year>=2013]))) # 41% of overlapping years
# see how new data aligns with census
plot(final$permits, final$total)
abline(a=0, b=1)
cor(final$permits, final$total, use = "complete.obs")
getwd()
# save data
write.csv(final, file = "../../output/temp/housing_apr.csv", row.names = FALSE)
rm(list = ls())
# install packages
# install.packages(dplyr)
# load packages
library(dplyr)
# set working directory
setwd("~/Dropbox/cvra/paper1_housing/replication/to_submit/create_data/raw/aggregatePermits/")
# function to subset and transform census data
cleanfun <- function(df, year, keepvars, names) {
df <- df[-1, keepvars]
names(df) <- names
for (i in 3:ncol(df)) {
df[,i] <- as.numeric(as.character(df[,i]))
}
df$year <- year
return(df)
}
# function to subset and transform census data (2018)
cleanfun18 <- function(df, year, keepvars, names) {
df <- df[-1,]
df$GEO_ID <- as.character(df$GEO_ID)
df$GEO.id2 <- substr(df$GEO_ID, nchar(df$GEO_ID)-6, nchar(df$GEO_ID))
df <- df[,keepvars]
names(df) <- names
for (i in 3:ncol(df)) {
df[,i] <- as.numeric(as.character(df[,i]))
}
df$year <- year
return(df)
}
# read data
df18 <- read.csv("race/cdp/ACS_18_5YR_B03002_with_ann.csv")
# set working directory
setwd("~/Dropbox/cvra/paper1_housing/replication/to_submit/create_data/raw/census/")
# function to subset and transform census data
cleanfun <- function(df, year, keepvars, names) {
df <- df[-1, keepvars]
names(df) <- names
for (i in 3:ncol(df)) {
df[,i] <- as.numeric(as.character(df[,i]))
}
df$year <- year
return(df)
}
# function to subset and transform census data (2018)
cleanfun18 <- function(df, year, keepvars, names) {
df <- df[-1,]
df$GEO_ID <- as.character(df$GEO_ID)
df$GEO.id2 <- substr(df$GEO_ID, nchar(df$GEO_ID)-6, nchar(df$GEO_ID))
df <- df[,keepvars]
names(df) <- names
for (i in 3:ncol(df)) {
df[,i] <- as.numeric(as.character(df[,i]))
}
df$year <- year
return(df)
}
# read data
df18 <- read.csv("race/cdp/ACS_18_5YR_B03002_with_ann.csv")
df17 <- read.csv("race/cdp/ACS_17_5YR_B03002_with_ann.csv")
df16 <- read.csv("race/cdp/ACS_16_5YR_B03002_with_ann.csv")
df15 <- read.csv("race/cdp/ACS_15_5YR_B03002_with_ann.csv")
df14 <- read.csv("race/cdp/ACS_14_5YR_B03002_with_ann.csv")
df13 <- read.csv("race/cdp/ACS_13_5YR_B03002_with_ann.csv")
df12 <- read.csv("race/cdp/ACS_12_5YR_B03002_with_ann.csv")
df11 <- read.csv("race/cdp/ACS_11_5YR_B03002_with_ann.csv")
df10 <- read.csv("race/cdp/ACS_10_5YR_B03002_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", # id
"GEO.display.label", # city
"HD01_VD03", # white nonhispanic
"HD01_VD01") # total
keepvars18 <- c("GEO.id2", # id
"NAME", # city
"B03002_003E", # white nonhispanic
"B03002_001E") # total
names <- c("GEO_id", "city", "n_wnh", "population")
out18 <- cleanfun18(df = df18, year = 2018, keepvars = keepvars18, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df12, year = 2012, keepvars = keepvars, names = names)
out11 <- cleanfun(df = df11, year = 2011, keepvars = keepvars, names = names)
out10 <- cleanfun(df = df10, year = 2010, keepvars = keepvars, names = names)
# stack
wnh <- rbind(out10, out11, out12, out13, out14, out15, out16, out17, out18)
# make variables
wnh$pct_wnh <- ifelse(wnh$population==0, 0, (wnh$n_wnh/wnh$population*100))
# read income data
df18 <- read.csv("income/cdp/ACS_18_5YR_S1903_with_ann.csv")
df17 <- read.csv("income/cdp/ACS_17_5YR_S1903_with_ann.csv")
df16 <- read.csv("income/cdp/ACS_16_5YR_S1903_with_ann.csv")
df15 <- read.csv("income/cdp/ACS_15_5YR_S1903_with_ann.csv")
df14 <- read.csv("income/cdp/ACS_14_5YR_S1903_with_ann.csv")
df13 <- read.csv("income/cdp/ACS_13_5YR_S1903_with_ann.csv")
df12 <- read.csv("income/cdp/ACS_12_5YR_S1903_with_ann.csv")
df11 <- read.csv("income/cdp/ACS_11_5YR_S1903_with_ann.csv")
df10 <- read.csv("income/cdp/ACS_10_5YR_S1903_with_ann.csv")
# clean & transform
keepvars18 <- c("GEO.id2", # id
"NAME", # city
"S1903_C01_001E", # n households
"S1903_C03_001E", # median income
"S1903_C02_002E", # percent white
"S1903_C02_003E", # percent black
"S1903_C02_005E", # percent asian
"S1903_C02_009E") # percent hispanic
keepvars17 <- c("GEO.id2", # id
"GEO.display.label", # city
"HC01_EST_VC02", # n households
"HC03_EST_VC02", # median income
"HC02_EST_VC04", # percent white
"HC02_EST_VC05", # percent black
"HC02_EST_VC07", # percent asian
"HC02_EST_VC12") # percent hispanic
keepvars16 <- c("GEO.id2", # id
"GEO.display.label", # city
"HC01_EST_VC02", # n households
"HC02_EST_VC02", # median income
"HC01_EST_VC04", # percent white
"HC01_EST_VC05", # percent black
"HC01_EST_VC07", # percent asian
"HC01_EST_VC12") # percent hispanic
names <- c("GEO_id", "city", "n_household", "med_income", "pct_white", "pct_black",
"pct_asian", "pct_hisp")
out18 <- cleanfun18(df = df18, year = 2018, keepvars = keepvars18, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars17, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars16, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars16, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars16, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars16, names = names)
out12 <- cleanfun(df = df12, year = 2012, keepvars = keepvars16, names = names)
out11 <- cleanfun(df = df11, year = 2011, keepvars = keepvars16, names = names)
out10 <- cleanfun(df = df10, year = 2010, keepvars = keepvars16, names = names)
# stack
income <- rbind(out10, out11, out12, out13, out14, out15, out16, out17, out18)
# read occupancy data
df18 <- read.csv("occupancy/cdp/ACS_18_5YR_B25002/ACS_18_5YR_B25002_with_ann.csv")
df17 <- read.csv("occupancy/cdp/ACS_17_5YR_B25002/ACS_17_5YR_B25002_with_ann.csv")
df16 <- read.csv("occupancy/cdp/ACS_16_5YR_B25002/ACS_16_5YR_B25002_with_ann.csv")
df15 <- read.csv("occupancy/cdp/ACS_15_5YR_B25002/ACS_15_5YR_B25002_with_ann.csv")
df14 <- read.csv("occupancy/cdp/ACS_14_5YR_B25002/ACS_14_5YR_B25002_with_ann.csv")
df13 <- read.csv("occupancy/cdp/ACS_13_5YR_B25002/ACS_13_5YR_B25002_with_ann.csv")
df12 <- read.csv("occupancy/cdp/ACS_12_5YR_B25002/ACS_12_5YR_B25002_with_ann.csv")
df11 <- read.csv("occupancy/cdp/ACS_11_5YR_B25002/ACS_11_5YR_B25002_with_ann.csv")
df10 <- read.csv("occupancy/cdp/ACS_10_5YR_B25002/ACS_10_5YR_B25002_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", "GEO.display.label", "HD01_VD01", "HD01_VD02", "HD01_VD03")
keepvars18 <- c("GEO.id2", "NAME", "B25002_001E", "B25002_002E", "B25002_003E")
names <- c("GEO_id", "city", "n_housing_units", "n_occupied_units", "n_vacant_units")
out18 <- cleanfun18(df = df18, year = 2018, keepvars = keepvars18, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df12, year = 2012, keepvars = keepvars, names = names)
out11 <- cleanfun(df = df11, year = 2011, keepvars = keepvars, names = names)
out10 <- cleanfun(df = df10, year = 2010, keepvars = keepvars, names = names)
# stack
occupy <- rbind(out10, out11, out12, out13, out14, out15, out16, out17, out18)
# make variables
occupy$vacancy_rate <- occupy$n_vacant_units/occupy$n_housing_units
# read ownership data
df18 <- read.csv("owner/cdp/ACS_18_5YR_B25026/ACS_18_5YR_B25026_with_ann.csv")
df17 <- read.csv("owner/cdp/ACS_17_5YR_B25026/ACS_17_5YR_B25026_with_ann.csv")
df16 <- read.csv("owner/cdp/ACS_16_5YR_B25026/ACS_16_5YR_B25026_with_ann.csv")
df15 <- read.csv("owner/cdp/ACS_15_5YR_B25026/ACS_15_5YR_B25026_with_ann.csv")
df14 <- read.csv("owner/cdp/ACS_14_5YR_B25026/ACS_14_5YR_B25026_with_ann.csv")
df13 <- read.csv("owner/cdp/ACS_13_5YR_B25026/ACS_13_5YR_B25026_with_ann.csv")
df12 <- read.csv("owner/cdp/ACS_12_5YR_B25026/ACS_12_5YR_B25026_with_ann.csv")
df11 <- read.csv("owner/cdp/ACS_11_5YR_B25026/ACS_11_5YR_B25026_with_ann.csv")
df10 <- read.csv("owner/cdp/ACS_10_5YR_B25026/ACS_10_5YR_B25026_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", "GEO.display.label", "HD01_VD01", "HD01_VD02")
keepvars18 <- c("GEO.id2", "NAME", "B25026_001E", "B25026_002E")
names <- c("GEO_id", "city", "n_housing_units", "n_owner")
out18 <- cleanfun18(df = df18, year = 2018, keepvars = keepvars18, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df12, year = 2012, keepvars = keepvars, names = names)
out11 <- cleanfun(df = df11, year = 2011, keepvars = keepvars, names = names)
out10 <- cleanfun(df = df10, year = 2010, keepvars = keepvars, names = names)
# stack
owner <- rbind(out10, out11, out12, out13, out14, out15, out16, out17, out18)
# make variables
owner$own_rate <- owner$n_owner/owner$n_housing_units
# read value data
df18 <- read.csv("value/cdp/ACS_18_5YR_B25077/ACS_18_5YR_B25077_with_ann.csv")
df17 <- read.csv("value/cdp/ACS_17_5YR_B25077/ACS_17_5YR_B25077_with_ann.csv")
df16 <- read.csv("value/cdp/ACS_16_5YR_B25077/ACS_16_5YR_B25077_with_ann.csv")
df15 <- read.csv("value/cdp/ACS_15_5YR_B25077/ACS_15_5YR_B25077_with_ann.csv")
df14 <- read.csv("value/cdp/ACS_14_5YR_B25077/ACS_14_5YR_B25077_with_ann.csv")
df13 <- read.csv("value/cdp/ACS_13_5YR_B25077/ACS_13_5YR_B25077_with_ann.csv")
df12 <- read.csv("value/cdp/ACS_12_5YR_B25077/ACS_12_5YR_B25077_with_ann.csv")
df11 <- read.csv("value/cdp/ACS_11_5YR_B25077/ACS_11_5YR_B25077_with_ann.csv")
df10 <- read.csv("value/cdp/ACS_10_5YR_B25077/ACS_10_5YR_B25077_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", "GEO.display.label", "HD01_VD01")
keepvars18 <- c("GEO.id2", "NAME", "B25077_001E")
names <- c("GEO_id", "city", "med_value")
out18 <- cleanfun18(df = df18, year = 2018, keepvars = keepvars18, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df12, year = 2012, keepvars = keepvars, names = names)
out11 <- cleanfun(df = df11, year = 2011, keepvars = keepvars, names = names)
out10 <- cleanfun(df = df10, year = 2010, keepvars = keepvars, names = names)
# stack
value <- rbind(out10, out11, out12, out13, out14, out15, out16, out17, out18)
# read data
df <- read.csv("density/DEC_10_SF1_GCTPH1.ST10_with_ann.csv")
# clean & transform
keepvars <- c("GCT_STUB.target.geo.id2", "GEO.display.label", "GCT_STUB.display.label",
"HD01", "SUBHD0303", "SUBHD0401")
names <- c("GEO_id", "state", "city", "pop", "land_area", "density")
out <- cleanfun(df = df, year = NA, keepvars = keepvars, names = names)
density <- out[out$state=="California",]
density <- density[,c("GEO_id", "land_area", "density")]
occupy <- occupy[,c("GEO_id", "year", "vacancy_rate")]
owner <- owner[,c("GEO_id", "year", "own_rate")]
value <- value[,c("GEO_id", "year", "med_value")]
wnh <- wnh[,c("GEO_id", "year", "pct_wnh", "population")]
full1 <- merge(income, occupy, by = c("GEO_id", "year"), all = TRUE)
full2 <- merge(full1, owner, by = c("GEO_id", "year"), all = TRUE)
full3 <- merge(full2, value, by = c("GEO_id", "year"), all = TRUE)
final <- merge(full3, wnh, by = c("GEO_id", "year"), all = TRUE)
sub1618 <- final[final$year %in% c(2016:2018),]
df19 <- sub1618 %>%
group_by(GEO_id) %>%
dplyr::summarise(n_household = mean(n_household, na.rm=TRUE),
med_income = mean(med_income, na.rm = TRUE),
pct_white = mean(pct_white, na.rm = TRUE),
pct_black = mean(pct_black, na.rm = TRUE),
pct_asian = mean(pct_asian, na.rm = TRUE),
pct_hisp = mean(pct_hisp, na.rm = TRUE),
pct_wnh = mean(pct_wnh, na.rm = TRUE),
vacancy_rate = mean(vacancy_rate, na.rm = TRUE),
own_rate = mean(own_rate, na.rm = TRUE),
med_value = mean(med_value, na.rm = TRUE),
population = mean(population, na.rm = TRUE))
ids <- sub1618[sub1618$year==2018, c("GEO_id", "city")]
df19 <- merge(ids, df19, by = "GEO_id", all.x = TRUE)
df19$year <- 2019
final2 <- rbind(final, df19)
# merge on density
final2 <- merge(final2, density, by = "GEO_id", all.x = TRUE)
segregation <- read.table("../trounstineTheil.tab", header = T, sep = "\t", fill = TRUE)
seg11 <- subset(segregation, year=="2011")
seg11 <- subset(seg11, select=-c(year))
seg11$GEO_id <- formatC(seg11$geo_id2, width = 7, format= "d", flag = "0")
seg11 <- seg11[,names(seg11) %in% c("GEO_id", "year", "H_citytract_NHW")]
final2 <- merge(final2, seg11, all.x = T, by = "GEO_id")
#which cities are missing?
unique(subset(final2, is.na(H_citytract_NHW))$city) # a bunch of CDPs
inst <- read.csv("../cvraCities.csv")
inst <- inst[,c(1:4,6)]
names(inst) <- c("city2", "county", "date_switch_agree", "date_switch_elect", "decided_by")
# create city variable to match census data
inst$city <- as.character(paste0(inst$city2, " city, California"))
inst$city[inst$city=="Apple Valley city, California"] <- "Apple Valley town, California"
inst$city[inst$city=="Paso Robles city, California"] <- "El Paso de Robles (Paso Robles) city, California"
inst$city[inst$city=="Ventura city, California"] <- "San Buenaventura (Ventura) city, California"
inst$city[inst$city=="Yucca Valley city, California"] <- "Yucca Valley town, California"
inst$city[inst$city=="Windsor city, California"] <- "Windsor town, California"
# code always district places
always <- inst$city[inst$decided_by=="Always"]
# code threatened places
threats <- inst$city[inst$decided_by %in% c("Letter", "Settlement", "Threat")]
# code time-varying treatment (from first election)
treats1 <- inst$city[!is.na(inst$date_switch_elect)]
# code time-varying treatment (from agreement to switch)
treats2 <- inst$city[!is.na(inst$date_switch_agree)]
### code treatment in final2 dataset
# fix eastvale in 2010 (was CDP, then became city)
final2$city <- as.character(final2$city)
final2$city[final2$year==2010 & final2$city=="Eastvale CDP, California"] <- "Eastvale city, California"
# create balanced panel, standardizing city name over time
ids <- unique(final2[,c("GEO_id", "city")])
# identify geoids with multiple city names
dup.ids <- unique(ids$GEO_id[duplicated(ids$GEO_id)]) # some multiple city names per geoid
# subset to these duplicates and sort them to put the right city name on top
dups <- ids[ids$GEO_id %in% dup.ids,]
dups <- dups[order(dups$GEO_id, dups$city),]
# drop observations after the first
dups$drop <- duplicated(dups$GEO_id)
dups <- dups[dups$drop==FALSE,]
# make final base dataset
ids <- rbind(ids[!ids$GEO_id %in% dup.ids,], dups[,!names(dups) %in% "drop"])
base <- expand.grid(ids$GEO_id, c(2010:2019))
names(base) <- c("GEO_id", "year")
base <- merge(base, ids, by = "GEO_id", all.x = TRUE)
final2 <- merge(base, final2[,!names(final2) %in% "city"], by = c("GEO_id", "year"), all.x = TRUE)
final2$switcher <- ifelse(final2$city %in% treats2, 1, 0) # switcher=city that would eventually agree to switch
final2$treat <- final2$treat2 <- 0
# main treatment: coded from year of first election
final2$treat[final2$city %in% always] <- 1
for (i in 1:length(treats1)) {
year <- inst$date_switch_elect[inst$city==treats1[i]]
final2$treat[final2$city==treats1[i] & final2$year>=year] <- 1
final2$year_switch[final2$city==treats1[i]] <- year
}
# second treatment: coded from year of agreement to switch
final2$treat2[final2$city %in% always] <- 1
for (i in 1:length(treats2)) {
year <- inst$date_switch_agree[inst$city==treats2[i]]
final2$treat2[final2$city==treats2[i] & final2$year>=year] <- 1
final2$year_agree[final2$city==treats2[i]] <- year
}
# sort by location/year
final2 <- final2[order(final2$city, final2$year),]
check <- final2[final2$switcher==1, c("city", "year", "switcher", "treat")]
unique(check$city) %in% inst$city
# write out dataset
write.csv(final2, file = "../../output/temp/city.csv", row.names = FALSE)
############################################################################
# This script cleans and combines data on California city council
# elections
# Downloaded from: http://csus-dspace.calstate.edu/handle/10211.3/210187
############################################################################
rm(list = ls())
# install packages
# install.packages("readxl")
# load packages
library("readxl")
# set working directory
setwd("~/Dropbox/cvra/paper1_housing/replication/to_submit/create_data/raw/ceda/")
# load datasets
df98 <- data.frame(read_excel("CEDA1998Data.xls", sheet = "Candidates1998"))
df99 <- data.frame(read_excel("CEDA1999Data.xls", sheet = "Candidates1999"))
df00 <- data.frame(read_excel("CEDA2000Data.xls", sheet = "Candidates2000"))
df01 <- data.frame(read_excel("CEDA2001Data.xls", sheet = "Candidates2001"))
df02 <- data.frame(read_excel("CEDA2002Data.xls", sheet = "Candidates2002"))
df03 <- data.frame(read_excel("CEDA2003Data.xls", sheet = "Candidates2003"))
df04 <- data.frame(read_excel("CEDA2004Data.xls", sheet = "Candidates2004"))
df05 <- data.frame(read_excel("CEDA2005Data.xls", sheet = "Candidates2005"))
df06 <- data.frame(read_excel("CEDA2006Data.xls", sheet = "Candidates2006"))
df07 <- data.frame(read_excel("CEDA2007Data.xls", sheet = "Candidates2007"))
df08 <- data.frame(read_excel("CEDA2008Data.xls", sheet = "Candidates2008"))
df09 <- data.frame(read_excel("CEDA2009Data.xls", sheet = "Candidates2009"))
df10 <- data.frame(read_excel("CEDA2010Data.xls", sheet = "Candidates2010"))
df11 <- data.frame(read_excel("CEDA2011Data.xlsx", sheet = "Candidates2011"))
df12 <- data.frame(read_excel("CEDA2012Data.xlsx", sheet = "Candidates2012"))
df13 <- data.frame(read_excel("CEDA2013Data.xlsx", sheet = "Candidates2013"))
df14 <- data.frame(read_excel("CEDA2014Data.xlsx", sheet = "candidates2014"))
df15 <- data.frame(read_excel("CEDA2015Data.xlsx", sheet = "candidates2015"))
df16 <- data.frame(read_excel("CEDA2016Data.xlsx", sheet = "Candidates_2016"))
df17 <- data.frame(read_excel("CEDA2017Data.xlsx", sheet = "Candidates_2017"))
df18 <- data.frame(read_excel("CEDA2018Data.xlsx", sheet = "Candidates_2018"))
df19 <- data.frame(read_excel("CEDA2019Data.xlsx", sheet = "Candidates_2019"))
# keep useful variables, standardize and stack
keepvars <- c("RecordID", "CNTYNAME", "YEAR", "DATE", "OFFICE",
"LAST", "BALDESIG", "CAND.", "VOTES", "PLACE",
"WRITEIN", "TOTVOTES", "Multi_RaceID")
df98 <- df98[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df99 <- df99[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df00 <- df00[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df01 <- df01[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df02 <- df02[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df03 <- df03[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df04 <- df04[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df05 <- df05[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df06 <- df06[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df07 <- df07[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df08 <- df08[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df09 <- df09[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df10 <- df10[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df11 <- df11[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df12 <- df12[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df13 <- df13[,c(keepvars, "INC", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df14 <- df14[,c(keepvars, "INC", "elected", "FIRST", "VOTES_sum", "Percent")]
df15 <- df15[,c(keepvars, "INC", "elected", "FIRST", "SUMVOTES", "PERCENT")]
df16 <- df16[,c(keepvars, "INCUMB", "ELECTED", "FIRST", "SUMVOTES", "PERCENT")]
df17 <- df17[,c(keepvars, "INC", "elected", "FIRST", "SUMVOTES", "PERCENT")]
df18 <- df18[,c(keepvars, "INC", "ELECTED", "First", "VOTES_sum", "PERCENT")]
df19 <- df19[,c(keepvars, "INCUMB", "ELECTED", "First", "SUMVOTES", "PERCENT")]
newnames <- c("recordid", "county", "year", "date", "office", "surname",
"prof", "ncand", "votes", "location", "writein", "totalvotes",
"raceid", "incumb", "elected", "first", "sumvotes", "percent")
names(df98) <- names(df99) <- names(df00) <- names(df01) <- names(df02) <-
names(df03) <- names(df04) <- names(df05) <- names(df06) <- names(df07) <-
names(df08) <- names(df09) <- names(df10) <- names(df11) <- names(df12) <- names(df13) <-
names(df14) <- names(df15) <- names(df16) <- names(df17) <- names(df18) <- names(df19) <- newnames
df <- rbind(df98, df99, df00, df01, df02, df03, df04, df05, df06, df07,
df08, df09, df10, df11, df12, df13, df14, df15, df16, df17, df18, df19)
# restrict to city council races
df <- df[df$office %in% c("City Council", "CITY COUNCIL", "City Council - At Large",
"City Council - R", "CITY COUNCIL - R", "CITY COUNCIL - RECALL",
"CITY COUNCIL- R", "CITY COUNCIL-AT LARGE", "CITY COUNCIL-P",
"City Council-R", "CITY COUNCIL-R", "TOWN COUNCIL"),]
# save data
write.csv(df, file = "../../output/temp/ceda.csv", row.names = FALSE)
########################################################
# This script processes CEDA data and codes ethnicities
# of last names
########################################################
rm(list = ls())
# install packages
#install.packages("wru")
#install.packages("stringr")
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("DataCombine")
# load packages
library("wru")
library("stringr")
library(plyr); library(dplyr)
library(DataCombine)
