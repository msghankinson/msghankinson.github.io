ci.hi.95 = estimates + qnorm(0.975) * sds,
ci.lo.90 = estimates + qnorm(0.05) * sds,
ci.hi.90 = estimates + qnorm(0.95) * sds)
# create figure
ggplot(toplot, aes(x = vari)) +
geom_errorbar(aes(ymin = ci.lo.95, ymax = ci.hi.95), position = position_dodge(width = 0.2),
data = toplot,
width = .0, size = 0.35) +
geom_errorbar(aes(ymin = ci.lo.90, ymax = ci.hi.90), position = position_dodge(width = 0.2),
data = toplot,
width = .0, size = 1.5) +
geom_point(aes(y = estimates), position = position_dodge(width = 0.2),
data = toplot, size = 4) +
geom_hline(aes(yintercept = 0), lty = 2) +
ylab("Change in logged total units approved") +
scale_x_discrete("", labels = c( "treat_pre2:wnh.low.third"="t-2", "wnh.low.third:treat_pre1"="t-1",
"wnh.low.third:treat_granger"="t", "wnh.low.third:treat_post1"="t+1",
"wnh.low.third:treat_post2"="t+2","wnh.low.third:treat_post3plus"="t>=3")) +
theme_minimal() +
theme(text = element_text(size = 15), legend.position = "bottom")
####################################################################################
# Table C-12: Effect of Conversion to Single-Member Districts on Logged Units
# Approved, Terciles Defined Over All Treated Cities (Minority block groups:
# less than 38 percent white, white block groups: more than 67 percent white)
####################################################################################
# assign high and low race BG. low == .38, high  = .67
wnh_ave_switcher <- tapply(df$pct_nlw[df$switcher==1 & df$treat==0], as.character(df$geoid[df$switcher==1 & df$treat==0]), mean, na.rm = TRUE)
wnh_ave <- tapply(df$pct_nlw, as.character(df$geoid), mean, na.rm = TRUE)
high_med <- names(wnh_ave)[wnh_ave > median(wnh_ave_switcher, na.rm = TRUE)]
high_third <- names(wnh_ave)[wnh_ave > quantile(wnh_ave_switcher, probs = .67, na.rm = TRUE)]
low_third <- names(wnh_ave)[wnh_ave < quantile(wnh_ave_switcher, probs = .33, na.rm = TRUE)]
df$wnh.high.third2 <- ifelse(df$geoid %in% high_third, 1, 0)
df$wnh.low.third2 <- ifelse(df$geoid %in% low_third, 1, 0)
df3 <- df[df$wnh.high.third2==1 | df$wnh.low.third2==1,]
# top v. bottom third interaction
total_int2 <- glm(formula = lnunits_total_z ~ treat*wnh.low.third2 + n_households + med_income_imp + med_value_imp + vacancy_rate +
own_rate + pct_black + pct_hisp + as.factor(year) + year*as.factor(city), data = df3)
multi_int2 <- glm(formula = lnunits_multi_z ~ treat*wnh.low.third2 + n_households + med_income_imp + med_value_imp + vacancy_rate +
own_rate + pct_black + pct_hisp + as.factor(year) + year*as.factor(city), data = df3)
single_int2 <- glm(formula = lnunits_single_z ~ treat*wnh.low.third2 + n_households + med_income_imp + med_value_imp + vacancy_rate +
own_rate + pct_black + pct_hisp + as.factor(year) + year*as.factor(city), data = df3)
# wild bootstrap, city
cluster.total2 <- cluster.wild.glm(total_int2,
dat = df3,
cluster = ~city,
boot.reps = 1000,
impose.null = FALSE,
output.replicates = TRUE,
seed = 123)
cluster.multi2 <- cluster.wild.glm(multi_int2,
dat = df3,
cluster = ~city,
boot.reps = 1000,
impose.null = FALSE,
output.replicates = TRUE,
seed = 123)
cluster.single2 <- cluster.wild.glm(single_int2,
dat = df3,
cluster = ~city,
boot.reps = 1000,
impose.null = FALSE,
output.replicates = TRUE,
seed = 123)
# create table
stargazer(total_int2, multi_int2, single_int2,
report = "vcp*",
p = list(cluster.total2$p.values[c("treat", "wnh.low.third2", "treat:wnh.low.third2"),],
cluster.multi2$p.values[c("treat", "wnh.low.third2", "treat:wnh.low.third2"),],
cluster.single2$p.values[c("treat", "wnh.low.third2", "treat:wnh.low.third2"),]),
keep.stat = c("n", "rsq"),
keep = c("treat", "wnh.low.third2", "treat:wnh.low.third2"),
intercept.top = FALSE, intercept.bottom=TRUE,
title = "Effect of Conversion to Single-Member Districts on Logged Units Approved \\\\ Terciles Defined Over All Treated Cities (Minority block groups: less than 38 percent white, white block groups: more than 67 percent white)",
covariate.labels = c("Single-member districts", "Minority block groups", "SMD$*$Minority block groups"),
dep.var.labels.include = TRUE,
dep.var.caption = "",
dep.var.labels = c("Total Units", "Multifamily Units", "Single-family units"),
star.cutoffs = c(.05, .01, .001),
no.space = TRUE, multicolumn = T, type = "text",
align = TRUE,
notes.append = TRUE,
add.lines = list(c("Controls", "\\mc{Yes}", "\\mc{Yes}", "\\mc{Yes}"),
c("City FE", "\\mc{Yes}", "\\mc{Yes}", "\\mc{Yes}"),
c("Year FE", "\\mc{Yes}", "\\mc{Yes}", "\\mc{Yes}" ),
c("City Trends", "\\mc{Yes}", "\\mc{Yes}", "\\mc{Yes}")))
####################################################################################
# Table C-13: Effect of Conversion to Single-Member Districts on Logged Units
# Approved, Alternative Clustering Approaches
####################################################################################
# block bootstrap
cluster.total.bs <- cluster.bs.glm(total_int,
dat = df2,
boot.reps = 10000,
cluster = ~city,
stratify = TRUE,
seed = 123)
cluster.multi.bs <- cluster.bs.glm(multi_int,
dat = df2,
boot.reps = 10000,
cluster = ~city,
stratify = TRUE,
seed = 123)
cluster.single.bs <- cluster.bs.glm(single_int,
dat = df2,
boot.reps = 10000,
cluster = ~city,
stratify = TRUE,
seed = 123)
# cluster robust SEs, clustered on city
se.total <- coeftest(total_int, vcov = cluster.vcov(total_int, df2$city))
se.multi <- coeftest(multi_int, vcov = cluster.vcov(multi_int, df2$city))
se.single <- coeftest(single_int, vcov = cluster.vcov(single_int, df2$city))
# print p-values
print(list("single-member districts: wild" = c(cluster.total$p.values["treat",], cluster.multi$p.values["treat",], cluster.single$p.values["treat",]),
"single-member districts: block" = c(cluster.total.bs$p.values["treat",], cluster.multi.bs$p.values["treat",], cluster.single.bs$p.values["treat",]),
"single-member districts: cluster" = c(se.total["treat", "Pr(>|z|)"], se.multi["treat", "Pr(>|z|)"], se.single["treat", "Pr(>|z|)"]),
"minority block groups: wild" = c(cluster.total$p.values["wnh.low.third",], cluster.multi$p.values["wnh.low.third",], cluster.single$p.values["wnh.low.third",]),
"minority block groups: block" = c(cluster.total.bs$p.values["wnh.low.third",], cluster.multi.bs$p.values["wnh.low.third",], cluster.single.bs$p.values["wnh.low.third",]),
"minority block groups: cluster" = c(se.total["wnh.low.third", "Pr(>|z|)"], se.multi["wnh.low.third", "Pr(>|z|)"], se.single["wnh.low.third", "Pr(>|z|)"]),
"interaction: wild" = c(cluster.total$p.values["treat:wnh.low.third",], cluster.multi$p.values["treat:wnh.low.third",], cluster.single$p.values["treat:wnh.low.third",]),
"interaction: block" = c(cluster.total.bs$p.values["treat:wnh.low.third",], cluster.multi.bs$p.values["treat:wnh.low.third",], cluster.single.bs$p.values["treat:wnh.low.third",]),
"interaction: cluster" = c(se.total["treat:wnh.low.third", "Pr(>|z|)"], se.multi["treat:wnh.low.third", "Pr(>|z|)"], se.single["treat:wnh.low.third", "Pr(>|z|)"])))
####################################################################################
# Table A-3: Characteristics of Cities in Distributive Analysis by Type
####################################################################################
sub <- df[(df$city %in% c("Santa Barbara", "Santa Cruz") & df$year %in% c(2011:2014)) |
(df$city %in% c("Escondido", "Ventura") & df$year %in% c(2011:2013)) |
(df$city %in% c("Anaheim", "Glendale") & df$year %in% c(2011:2015)),]
t <- sub[sub$switcher==1,]
c <- sub[sub$switcher==0,]
fileConn <- file("balance.tex")
writeLines(c("{", "\n",
"\\begin{tabular}{ l c c c }", "\n",
"& Mean & Mean & p-value of \\\\", "\n",
"& (Treatment) & (Control) & difference \\\\", "\n",
"\\hline", "\n",
"Median income & ",
format(round(mean(t$med_income, na.rm = TRUE), digits = 0), nsmall = 0), " & ",
format(round(mean(c$med_income, na.rm = TRUE), digits = 0), nsmall = 0), " & ",
format(round(t.test(t$med_income, c$med_income)$p.value, digits = 2), nsmall = 2), "\\\\",  "\n",
"Median home value & ",
format(round(mean(t$med_value, na.rm = TRUE), digits = 0), nsmall = 0), " & ",
format(round(mean(c$med_value, na.rm = TRUE), digits = 0), nsmall = 0), " & ",
format(round(t.test(t$med_value, c$med_value)$p.value, digits = 2), nsmall = 2), "\\\\",  "\n",
"Home ownership rate & ",
format(round(mean(t$own_rate, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(mean(c$own_rate, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(t.test(t$own_rate, c$own_rate)$p.value, digits = 2), nsmall = 2), "\\\\",  "\n",
"Home vacancy rate & ",
format(round(mean(t$vacancy_rate, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(mean(c$vacancy_rate, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(t.test(t$vacancy_rate, c$vacancy_rate)$p.value, digits = 2), nsmall = 2), "\\\\",  "\n",
"Proportion Black & ",
format(round(mean(t$pct_black, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(mean(c$pct_black, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(t.test(t$pct_black, c$pct_black)$p.value, digits = 2), nsmall = 2), "\\\\",  "\n",
"Proportion non-Hispanic white & ",
format(round(mean(t$pct_nlw, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(mean(c$pct_nlw, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(t.test(t$pct_nlw, c$pct_nlw)$p.value, digits = 2), nsmall = 2), "\\\\",  "\n",
"Proportion Hispanic & ",
format(round(mean(t$pct_hisp, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(mean(c$pct_hisp, na.rm = TRUE), digits = 2), nsmall = 2), " & ",
format(round(t.test(t$pct_hisp, c$pct_hisp)$p.value, digits = 2), nsmall = 2), "\\\\",  "\n",
"\\end{tabular}", "\n",
"}"),
sep = "", fileConn)
close(fileConn)
########################################################
# This script processes our original dataset of
# permits collected from city council minutes
# It geocodes these permits and aggregates them
# to the block group level
# Then it merges on Census covariates, imputes missing
# values, and creates some variables for final analysis
# Output: Block group by year dataset of permits,
# treatment, and covariates
########################################################
rm(list = ls())
set.seed(123)
# install libraries
#install.packages("ggmap")
#install.packages("ggplot2")
#install.packages("rworldmap")
#install.packages("rgdal")
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("Amelia")
# load libraries
library(ggmap)
library(ggplot2)
library(rworldmap)
library(rgdal)
library(plyr); library(dplyr)
library(Amelia)
# set working directory
setwd("~/Dropbox/cvra/paper1_housing/replication/to_submit/create_data/") # set to create_data
# source geocoding script
source("scripts/spatial/getGeoDetails.R")
########################################
# read in data sets and combine
########################################
#permits <- gs_title("cvraPermits")
#anaheim <- gs_read(ss = permits, ws = "anaheimFinal")
#sb <- gs_read(ss = permits, ws = "santaBarbaraFinal")
#sc <- gs_read(ss = permits, ws = "santaCruzFinal")
#escondido <- gs_read(ss = permits, ws = "escondidoFinal")
#glendale <- gs_read(ss = permits, ws = "glendaleFinal")
#ventura <- gs_read(ss = permits, ws = "venturaFinal")
anaheim <- read.csv("raw/spatialPermits/cvraPermits - anaheimFinal.csv")
sb <- read.csv("raw/spatialPermits/cvraPermits - santaBarbaraFinal.csv")
sc <- read.csv("raw/spatialPermits/cvraPermits - santaCruzFinal.csv")
escondido <- read.csv("raw/spatialPermits/cvraPermits - escondidoFinal.csv")
glendale <- read.csv("raw/spatialPermits/cvraPermits - glendaleFinal.csv")
ventura <- read.csv("raw/spatialPermits/cvraPermits - venturaFinal.csv")
keepvars <- c("city", "application", "address", "zoning", "totalUnits", "singleFamily", "multiFamily", "totalUnitsNet",
"singleFamilyNet", "multiFamilyNet", "affordability", "planningVote", "planningApprove", "councilVote",
"councilApprove", "finalApproval", "year", "redesign")
anaheim <- anaheim[,keepvars]
sb <- sb[,keepvars]
sc <- sc[,keepvars]
escondido <- escondido[,keepvars]
glendale <- glendale[,keepvars]
ventura <- ventura[,keepvars]
all <- rbind(anaheim, sb, sc, escondido, glendale, ventura)
addresses <- paste0(all$address, ", ", all$city, ", California")
#write.csv(all, file = "output/temp/all_permits_geocoded.csv", row.names = FALSE)
all <- read.csv("output/temp/all_permits_geocoded.csv")
bg <- readOGR(dsn = "raw/shapefiles/tl_2015_06_bg/")
# get coordinates
coords <- all[,c("long", "lat")]
sp <- SpatialPoints(coords)
# change projections to match
proj4string(sp) <- proj4string(bg)
# code tract of coordinates
by_bg <- over(sp, bg)
# merge with original data
all$tract <- by_bg$TRACTCE
all$bg <- by_bg$BLKGRPCE
all$county <- by_bg$COUNTYFP
all$geoid <- by_bg$GEOID
# aggregate observations to block group/year level
# base dataset
geoids <- unique(all[,c("geoid", "city")])
base <- data.frame(geoid = rep(geoids$geoid, 10),
city = rep(geoids$city, 10),
year = rep(c(2009:2018), each = nrow(geoids)))
base <- base[order(base$geoid, base$year),]
# aggregate
agg <- all %>%
group_by(geoid, year) %>%
summarise(nbuilds = n(),
nunits_single = sum(singleFamily[zoning!=1]),
nunits_multi = sum(multiFamily[zoning!=1]),
nunits_total = sum(totalUnits[zoning!=1]),
nunits_single_z = sum(singleFamily), # keep zonings
nunits_multi_z = sum(multiFamily),
nunits_total_z = sum(totalUnits))
agg <- merge(base, agg, by = c("geoid", "year"), all.x = TRUE)
agg$nbuilds[is.na(agg$nbuilds)] <- 0
agg$nunits_single[is.na(agg$nunits_single)] <- 0
agg$nunits_multi[is.na(agg$nunits_multi)] <- 0
agg$nunits_total[is.na(agg$nunits_total)] <- 0
agg$nunits_single_z[is.na(agg$nunits_single_z)] <- 0
agg$nunits_multi_z[is.na(agg$nunits_multi_z)] <- 0
agg$nunits_total_z[is.na(agg$nunits_total_z)] <- 0
# drop if missing a geoid
agg <- agg[!is.na(agg$geoid),]
##############################################
# get statistics for block group from census
##############################################
# function to subset and transform census data
cleanfun <- function(df, year, keepvars, names) {
df <- df[-1, keepvars]
names(df) <- names
for (i in 2:ncol(df)) {
df[,i] <- as.numeric(as.character(df[,i]))
}
df$year <- year
return(df)
}
###################### INCOME DATA ########################
# read income data
df13 <- read.csv("raw/census/income/bg/ACS_13_5YR_B19013/ACS_13_5YR_B19013_with_ann.csv")
df14 <- read.csv("raw/census/income/bg/ACS_14_5YR_B19013/ACS_14_5YR_B19013_with_ann.csv")
df15 <- read.csv("raw/census/income/bg/ACS_15_5YR_B19013/ACS_15_5YR_B19013_with_ann.csv")
df16 <- read.csv("raw/census/income/bg/ACS_16_5YR_B19013/ACS_16_5YR_B19013_with_ann.csv")
df17 <- read.csv("raw/census/income/bg/ACS_17_5YR_B19013/ACS_17_5YR_B19013_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", # id
"HD01_VD01") # median household income
names <- c("GEO_id", "med_income")
# throughout, will assign 2013 data to 2011 and 2012
out11 <- cleanfun(df = df13, year = 2011, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df13, year = 2012, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
# stack
income <- rbind(out11, out12, out13, out14, out15, out16, out17)
###################### ETHNICITY ########################
# read white nonlatino data
df13 <- read.csv("raw/census/race/bg/ACS_13_5YR_B11001H/ACS_13_5YR_B11001H_with_ann.csv")
df14 <- read.csv("raw/census/race/bg/ACS_14_5YR_B11001H/ACS_14_5YR_B11001H_with_ann.csv")
df15 <- read.csv("raw/census/race/bg/ACS_15_5YR_B11001H/ACS_15_5YR_B11001H_with_ann.csv")
df16 <- read.csv("raw/census/race/bg/ACS_16_5YR_B11001H/ACS_16_5YR_B11001H_with_ann.csv")
df17 <- read.csv("raw/census/race/bg/ACS_17_5YR_B11001H/ACS_17_5YR_B11001H_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", # id
"HD01_VD01") # total number of households
names <- c("GEO_id", "n_households_nlwhite")
out11 <- cleanfun(df = df13, year = 2011, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df13, year = 2012, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
# stack
households_nlwhite <- rbind(out11, out12, out13, out14, out15, out16, out17)
# read latino data
df13 <- read.csv("raw/census/race/bg/latino/ACS_13_5YR_B11001I_with_ann.csv")
df14 <- read.csv("raw/census/race/bg/latino/ACS_13_5YR_B11001I_with_ann.csv")
df15 <- read.csv("raw/census/race/bg/latino/ACS_13_5YR_B11001I_with_ann.csv")
df16 <- read.csv("raw/census/race/bg/latino/ACS_13_5YR_B11001I_with_ann.csv")
df17 <- read.csv("raw/census/race/bg/latino/ACS_13_5YR_B11001I_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", # id
"HD01_VD01") # total number of households
names <- c("GEO_id", "n_households_latino")
out11 <- cleanfun(df = df13, year = 2011, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df13, year = 2012, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
# stack
households_latino <- rbind(out11, out12, out13, out14, out15, out16, out17)
# read ethnicities data
df13 <- read.csv("raw/census/race/bg/ACS_13_5YR_B25006/ACS_13_5YR_B25006_with_ann.csv")
df14 <- read.csv("raw/census/race/bg/ACS_14_5YR_B25006/ACS_14_5YR_B25006_with_ann.csv")
df15 <- read.csv("raw/census/race/bg/ACS_15_5YR_B25006/ACS_15_5YR_B25006_with_ann.csv")
df16 <- read.csv("raw/census/race/bg/ACS_16_5YR_B25006/ACS_16_5YR_B25006_with_ann.csv")
df17 <- read.csv("raw/census/race/bg/ACS_17_5YR_B25006/ACS_17_5YR_B25006_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", # id
"HD01_VD01", # total number of households
"HD01_VD02", # white alone
"HD01_VD03", # black alone
"HD01_VD05") # asian alone
names <- c("GEO_id", "n_households", "nhouseholds_white",
"nhouseholds_black", "nhouseholds_asian")
out11 <- cleanfun(df = df13, year = 2011, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df13, year = 2012, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
# stack
households <- rbind(out11, out12, out13, out14, out15, out16, out17)
###################### OCCUPANCY ########################
df13 <- read.csv("raw/census/occupancy/bg/ACS_13_5YR_B25002/ACS_13_5YR_B25002_with_ann.csv")
df14 <- read.csv("raw/census/occupancy/bg/ACS_14_5YR_B25002/ACS_14_5YR_B25002_with_ann.csv")
df15 <- read.csv("raw/census/occupancy/bg/ACS_15_5YR_B25002/ACS_15_5YR_B25002_with_ann.csv")
df16 <- read.csv("raw/census/occupancy/bg/ACS_16_5YR_B25002/ACS_16_5YR_B25002_with_ann.csv")
df17 <- read.csv("raw/census/occupancy/bg/ACS_17_5YR_B25002/ACS_17_5YR_B25002_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", # id
"HD01_VD01", # total
"HD01_VD02", # occupied
"HD01_VD03") # vacant
names <- c("GEO_id", "total_occ", "occupied", "vacant")
out11 <- cleanfun(df = df13, year = 2011, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df13, year = 2012, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
# stack
occupancy <- rbind(out11, out12, out13, out14, out15, out16, out17)
###################### OWNER ########################
df13 <- read.csv("raw/census/owner/bg/ACS_13_5YR_B25008/ACS_13_5YR_B25008_with_ann.csv")
df14 <- read.csv("raw/census/owner/bg/ACS_14_5YR_B25008/ACS_14_5YR_B25008_with_ann.csv")
df15 <- read.csv("raw/census/owner/bg/ACS_15_5YR_B25008/ACS_15_5YR_B25008_with_ann.csv")
df16 <- read.csv("raw/census/owner/bg/ACS_16_5YR_B25008/ACS_16_5YR_B25008_with_ann.csv")
df17 <- read.csv("raw/census/owner/bg/ACS_17_5YR_B25008/ACS_17_5YR_B25008_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", # id
"HD01_VD01", # total
"HD01_VD02", # owner occupied
"HD01_VD03") # renter occupied
names <- c("GEO_id", "total_own", "owner", "renter")
out11 <- cleanfun(df = df13, year = 2011, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df13, year = 2012, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
# stack
owner <- rbind(out11, out12, out13, out14, out15, out16, out17)
###################### HOME PRICE ########################
df13 <- read.csv("raw/census/value/bg/ACS_13_5YR_B25077/ACS_13_5YR_B25077_with_ann.csv")
df14 <- read.csv("raw/census/value/bg/ACS_14_5YR_B25077/ACS_14_5YR_B25077_with_ann.csv")
df15 <- read.csv("raw/census/value/bg/ACS_15_5YR_B25077/ACS_15_5YR_B25077_with_ann.csv")
df16 <- read.csv("raw/census/value/bg/ACS_16_5YR_B25077/ACS_16_5YR_B25077_with_ann.csv")
df17 <- read.csv("raw/census/value/bg/ACS_17_5YR_B25077/ACS_17_5YR_B25077_with_ann.csv")
# clean & transform
keepvars <- c("GEO.id2", # id
"HD01_VD01") # median home value
names <- c("GEO_id", "med_value")
out11 <- cleanfun(df = df13, year = 2011, keepvars = keepvars, names = names)
out12 <- cleanfun(df = df13, year = 2012, keepvars = keepvars, names = names)
out13 <- cleanfun(df = df13, year = 2013, keepvars = keepvars, names = names)
out14 <- cleanfun(df = df14, year = 2014, keepvars = keepvars, names = names)
out15 <- cleanfun(df = df15, year = 2015, keepvars = keepvars, names = names)
out16 <- cleanfun(df = df16, year = 2016, keepvars = keepvars, names = names)
out17 <- cleanfun(df = df17, year = 2017, keepvars = keepvars, names = names)
# stack
value <- rbind(out11, out12, out13, out14, out15, out16, out17)
###################### TOTAL PERMITS BY CITY ########################
city <- agg %>%
group_by(city, year) %>%
summarise(nunits_multi_city = sum(nunits_multi),
nunits_total_city = sum(nunits_total),
nunits_multi_city_z = sum(nunits_multi_z),
nunits_total_city_z = sum(nunits_total_z))
###################### MERGE ALL ########################
m1 <- merge(households, households_nlwhite, by = c("GEO_id", "year"), all.x = TRUE)
m2 <- merge(m1, households_latino, by = c("GEO_id", "year"), all.x = TRUE)
m3 <- merge(m2, income, by = c("GEO_id", "year"), all.x = TRUE)
m4 <- merge(m3, occupancy, by = c("GEO_id", "year"), all.x = TRUE)
m5 <- merge(m4, value, by = c("GEO_id", "year"), all.x = TRUE)
m6 <- merge(m5, owner, by = c("GEO_id", "year"), all.x = TRUE)
# impute missing values for 2018 using three-year averages
sub1517 <- m6[m6$year %in% c(2015:2017),]
df18 <- sub1517 %>%
group_by(GEO_id) %>%
dplyr::summarise(n_households = mean(n_households, na.rm=TRUE),
nhouseholds_white = mean(nhouseholds_white, na.rm=TRUE),
nhouseholds_black = mean(nhouseholds_black, na.rm=TRUE),
nhouseholds_asian = mean(nhouseholds_asian, na.rm=TRUE),
n_households_nlwhite = mean(n_households_nlwhite, na.rm=TRUE),
n_households_latino = mean(n_households_latino, na.rm=TRUE),
med_income = mean(med_income, na.rm = TRUE),
total_occ = mean(total_occ, na.rm=TRUE),
occupied = mean(occupied, na.rm=TRUE),
vacant = mean(vacant, na.rm=TRUE),
med_value = mean(med_value, na.rm=TRUE),
total_own = mean(total_own, na.rm=TRUE),
owner = mean(owner, na.rm=TRUE),
renter = mean(renter, na.rm=TRUE))
df18$year <- 2018
m6 <- rbind(m6, df18)
# merge with geocoded data
names(m6)[1] <- "geoid"
m7 <- merge(agg, m6, by = c("geoid", "year"), all.x = TRUE)
# merge with city data
final <- merge(m7, city, by = c("city", "year"), all.x = TRUE)
# code variables
final$own_rate <- final$owner/final$total_own
final$vacancy_rate <- final$vacant/final$total_occ
final$pct_white <- final$nhouseholds_white/final$n_households
final$pct_black <- final$nhouseholds_black/final$n_households
final$pct_hisp <- final$n_households_latino/final$n_households
final$pct_nlw <- final$n_households_nlwhite/final$n_households
# code DVs
final$lnunits_total <- log(final$nunits_total + 1)
final$lnunits_multi <- log(final$nunits_multi + 1)
final$propcity_total <- final$nunits_total/final$nunits_total_city
final$propcity_multi <- final$nunits_multi/final$nunits_multi_city
final$propcity_total_z <- final$nunits_total_z/final$nunits_total_city_z
final$propcity_multi_z <- final$nunits_multi_z/final$nunits_multi_city_z
# code treatment status
final$treat <- 0
final$treat[final$year>=2015 & final$city=="Santa Barbara"] <- 1
final$treat[final$year>=2016 & final$city=="Anaheim"] <- 1
final$treat[final$year>=2014 & final$city=="Escondido"] <- 1
# subset to 2011 and forward
sub <- subset(final, year>2010)
# impute missing observations
df <- sub[,names(sub) %in% c("nunits_multi", "nunits_single", "nunits_total", "nunits_multi_z", "nunits_single_z", "nunits_total_z",
"propcity_total_z", "propcity_multi_z", "propcity_total", "propcity_multi",
"treat", "city", "geoid", "year", "n_households", "med_income", "med_value",
"vacancy_rate", "own_rate", "pct_black", "pct_hisp", "pct_nlw")]
imp <- amelia(df, m = 5, idvars = c("city", "year", "geoid", "nunits_multi", "nunits_single", "nunits_total",
"propcity_total_z", "propcity_multi_z", "propcity_total", "propcity_multi",
"nunits_multi_z", "nunits_single_z", "nunits_total_z"))
df$med_income_imp <- rowMeans(data.frame(imp1 = imp$imputations$imp1$med_income, imp2 = imp$imputations$imp2$med_income,
imp3 = imp$imputations$imp3$med_income, imp4 = imp$imputations$imp4$med_income,
imp5 = imp$imputations$imp1$med_income))
df$med_value_imp <- rowMeans(data.frame(imp1 = imp$imputations$imp1$med_value, imp2 = imp$imputations$imp2$med_value,
imp3 = imp$imputations$imp3$med_value, imp4 = imp$imputations$imp4$med_value,
imp5 = imp$imputations$imp1$med_value))
# recode percent hispanic to be no greater than 1 (unclear why this happened in a few observations)
df$pct_hisp[df$pct_hisp > 1] <- 1
# code switcher status
df$switcher <- ifelse(df$city %in% c("Anaheim", "Santa Barbara", "Escondido"), 1, 0)
# keep only needed variables
keeps <- c("city", "geoid", "year", "treat", "switcher",
"nunits_multi_z", "nunits_single_z", "nunits_total_z",
"pct_black", "pct_hisp", "pct_nlw",
"n_households", "own_rate", "vacancy_rate",
"med_value",  "med_value_imp", "med_income", "med_income_imp")
df <- df[,keeps]
# write out data
write.csv(df, file = "output/final/housing_spatial_fresh.csv", row.names = FALSE)
